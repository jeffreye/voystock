<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Voystock"
             xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2" xmlns:System="clr-namespace:System;assembly=mscorlib" x:Name="userControl" x:Class="Voystock.评测子页面Control"
             mc:Ignorable="d" 
             d:DesignHeight="674" d:DesignWidth="902" DataContext="{Binding Evaluation, Mode=OneWay, Source={StaticResource Locator}}">
    <Grid>
        <TabControl x:Name="评测子页面" HorizontalAlignment="Right" Height="580" VerticalAlignment="Bottom" Width="902" Margin="0,0,0,94" Style="{DynamicResource TabControlStyle1}" SelectionChanged="评测子页面_SelectionChanged">
            <TabControl.Resources>
                <SolidColorBrush x:Key="TabItem.Selected.Background" Color="#FFFFFF"/>
                <SolidColorBrush x:Key="TabItem.Selected.Border" Color="#ACACAC"/>
                <Style x:Key="TabControlStyle1" TargetType="{x:Type TabControl}">
                    <Setter Property="Padding" Value="2"/>
                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <Setter Property="Background" Value="{StaticResource TabItem.Selected.Background}"/>
                    <Setter Property="BorderBrush" Value="{StaticResource TabItem.Selected.Border}"/>
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type TabControl}">
                                <Grid x:Name="templateRoot" ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition x:Name="ColumnDefinition0"/>
                                        <ColumnDefinition x:Name="ColumnDefinition1" Width="30"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition x:Name="RowDefinition0" Height="Auto" MinHeight="90"/>
                                        <RowDefinition x:Name="RowDefinition1"/>
                                    </Grid.RowDefinitions>
                                    <TabPanel x:Name="headerPanel" Background="Transparent" Grid.Column="0" IsItemsHost="true" Margin="2,2,2,0" Grid.Row="0" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1" d:LayoutOverrides="LeftMargin, RightMargin, TopMargin, BottomMargin"/>
                                    <Border x:Name="contentPanel" BorderThickness="{TemplateBinding BorderThickness}" Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local" d:LayoutOverrides="LeftMargin, RightMargin, TopMargin, BottomMargin">
                                        <Border.Background>
                                            <ImageBrush ImageSource="UIElements/子页面BG.png"/>
                                        </Border.Background>
                                        <ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    </Border>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="TabStripPlacement" Value="Bottom">
                                        <Setter Property="Grid.Row" TargetName="headerPanel" Value="1"/>
                                        <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                                        <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                        <Setter Property="Height" TargetName="RowDefinition1" Value="Auto"/>
                                        <Setter Property="Margin" TargetName="headerPanel" Value="2,0,2,2"/>
                                    </Trigger>
                                    <Trigger Property="TabStripPlacement" Value="Left">
                                        <Setter Property="Grid.Row" TargetName="headerPanel" Value="0"/>
                                        <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                                        <Setter Property="Grid.Column" TargetName="headerPanel" Value="0"/>
                                        <Setter Property="Grid.Column" TargetName="contentPanel" Value="1"/>
                                        <Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto"/>
                                        <Setter Property="Width" TargetName="ColumnDefinition1" Value="*"/>
                                        <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                        <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                                        <Setter Property="Margin" TargetName="headerPanel" Value="2,2,0,2"/>
                                    </Trigger>
                                    <Trigger Property="TabStripPlacement" Value="Right">
                                        <Setter Property="Grid.Row" TargetName="headerPanel" Value="0"/>
                                        <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                                        <Setter Property="Grid.Column" TargetName="headerPanel" Value="1"/>
                                        <Setter Property="Grid.Column" TargetName="contentPanel" Value="0"/>
                                        <Setter Property="Width" TargetName="ColumnDefinition0" Value="*"/>
                                        <Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto"/>
                                        <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                        <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                                        <Setter Property="Margin" TargetName="headerPanel" Value="0,2,2,2"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </TabControl.Resources>
            <TabItem x:Name="指标设置" Header="指标" Margin="-2,-2,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Width="166" Height="60" BorderBrush="{x:Null}" Foreground="#DD000000" Style="{DynamicResource TabItemStyle1}" Padding="90,2,6,2" FontSize="20" Template="{DynamicResource TabTemplate}">
                <TabItem.Resources>
                    <Style x:Key="FocusVisual">
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <ImageBrush x:Key="TabItem.Static.Background" ImageSource="UIElements/指标BG_normal.png" />
                    <SolidColorBrush x:Key="TabItem.Static.Border" Color="#00ACACAC"/>
                    <ImageBrush x:Key="TabItem.MouseOver.Background" ImageSource="UIElements/指标BG_hover.png" />
                    <SolidColorBrush x:Key="TabItem.MouseOver.Border" Color="#007EB4EA"/>
                    <SolidColorBrush x:Key="TabItem.Disabled.Background" Color="#00000000"/>
                    <SolidColorBrush x:Key="TabItem.Disabled.Border" Color="#00D9D9D9"/>
                    <SolidColorBrush x:Key="TabItem.Selected.Border" Color="#00000000"/>
                    <ImageBrush x:Key="TabItem.Selected.Background" ImageSource="UIElements/指标BG_pressed.png"/>
                    <Style x:Key="TabItemStyle1" TargetType="{x:Type TabItem}">
                        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                        <Setter Property="Foreground" Value="Black"/>
                        <Setter Property="Background" Value="{StaticResource TabItem.Static.Background}"/>
                        <Setter Property="BorderBrush" Value="{StaticResource TabItem.Static.Border}"/>
                        <Setter Property="Margin" Value="0"/>
                        <Setter Property="Padding" Value="6,2,6,2"/>
                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type TabItem}">
                                    <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                                        <Border x:Name="mainBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,1,1,0" Background="{TemplateBinding Background}" Margin="0">
                                            <Border x:Name="innerBorder" BorderBrush="{StaticResource TabItem.Selected.Border}" BorderThickness="1,1,1,0" Background="{StaticResource TabItem.Selected.Background}" Margin="-1" Opacity="0"/>
                                        </Border>
                                        <ContentPresenter x:Name="contentPresenter" ContentSource="Header" Focusable="False" HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
                                            <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
                                            <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
                                            <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
                                            <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                            <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                                            <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                            <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                                            <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                            <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                                            <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                            <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                                            <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Panel.ZIndex" Value="1"/>
                                            <Setter Property="Margin" Value="-2,-2,0,-2"/>
                                            <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Panel.ZIndex" Value="1"/>
                                            <Setter Property="Margin" Value="-2,0,-2,-2"/>
                                            <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Panel.ZIndex" Value="1"/>
                                            <Setter Property="Margin" Value="0,-2,-2,-2"/>
                                            <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Panel.ZIndex" Value="1"/>
                                            <Setter Property="Margin" Value="-2,-2,-2,0"/>
                                            <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                                        </MultiDataTrigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </TabItem.Resources>
                <TabItem.Background>
                    <ImageBrush ImageSource="UIElements/指标BG_normal.png"/>
                </TabItem.Background>
                <Grid Background="#02FFFFFF">
                    <ComboBox x:Name="指标下拉" HorizontalAlignment="Left" VerticalAlignment="Top" Width="402" Margin="17,17,0,0" Height="44" Style="{DynamicResource ComboBoxStyle1}" VerticalContentAlignment="Center" ItemContainerStyle="{DynamicResource ComboBoxItemStyle1}" ItemTemplate="{DynamicResource DataTemplate1}" ItemsSource="{Binding 所有指标}">
                        <ComboBox.Resources>
                            <ImageBrush x:Key="ComboBox.Static.Background" ImageSource="UIElements/dropdow_nrml.png" />
                            <SolidColorBrush x:Key="ComboBox.Static.Border" Color="#00ACACAC"/>
                            <SolidColorBrush x:Key="ComboBox.Static.Editable.Background" Color="#FFFFFFFF"/>
                            <SolidColorBrush x:Key="ComboBox.Static.Editable.Border" Color="#FFABADB3"/>
                            <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Background" Color="Transparent"/>
                            <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Border" Color="Transparent"/>
                            <SolidColorBrush x:Key="ComboBox.MouseOver.Glyph" Color="#FF000000"/>
                            <ImageBrush x:Key="ComboBox.MouseOver.Background" ImageSource="UIElements/dropdown-hvr.png" />
                            <SolidColorBrush x:Key="ComboBox.MouseOver.Border" Color="#007EB4EA"/>
                            <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Background"/>
                            <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Border" Color="#007EB4EA"/>
                            <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Button.Background" Color="#00000000"/>
                            <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Button.Border" Color="#007EB4EA"/>
                            <SolidColorBrush x:Key="ComboBox.Pressed.Glyph" Color="#FF000000"/>
                            <ImageBrush x:Key="ComboBox.Pressed.Background" ImageSource="UIElements/dropdown-hvr.png" />
                            <SolidColorBrush x:Key="ComboBox.Pressed.Border" Color="#00569DE5"/>
                            <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Background" Color="#FFFFFFFF"/>
                            <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Border" Color="#00569DE5"/>
                            <LinearGradientBrush x:Key="ComboBox.Pressed.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
                                <GradientStop Color="#FFDAEBFC" Offset="0.0"/>
                                <GradientStop Color="#FFC4E0FC" Offset="1.0"/>
                            </LinearGradientBrush>
                            <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Button.Border" Color="#FF569DE5"/>
                            <SolidColorBrush x:Key="ComboBox.Disabled.Glyph" Color="#FFBFBFBF"/>
                            <SolidColorBrush x:Key="ComboBox.Disabled.Background" Color="#FFF0F0F0"/>
                            <SolidColorBrush x:Key="ComboBox.Disabled.Border" Color="#FFD9D9D9"/>
                            <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Background" Color="#FFFFFFFF"/>
                            <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Border" Color="#FFBFBFBF"/>
                            <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Background" Color="Transparent"/>
                            <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Border" Color="Transparent"/>
                            <SolidColorBrush x:Key="ComboBox.Static.Glyph" Color="#FF606060"/>
                            <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
                                <Setter Property="OverridesDefaultStyle" Value="true"/>
                                <Setter Property="IsTabStop" Value="false"/>
                                <Setter Property="Focusable" Value="false"/>
                                <Setter Property="ClickMode" Value="Press"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                                            <Border x:Name="templateRoot" BorderBrush="{StaticResource ComboBox.Static.Border}" BorderThickness="{TemplateBinding BorderThickness}" Background="{StaticResource ComboBox.Static.Background}" SnapsToDevicePixels="true">
                                                <Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="true" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                                    <Path x:Name="arrow" Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z" Fill="{StaticResource ComboBox.Static.Glyph}" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center"/>
                                                </Border>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                        <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                        <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Background}"/>
                                                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Border}"/>
                                                    <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Background}"/>
                                                    <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Border}"/>
                                                </MultiDataTrigger>
                                                <Trigger Property="IsMouseOver" Value="true">
                                                    <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.MouseOver.Glyph}"/>
                                                </Trigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Background}"/>
                                                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Border}"/>
                                                </MultiDataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Background}"/>
                                                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Border}"/>
                                                    <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Background}"/>
                                                    <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Border}"/>
                                                </MultiDataTrigger>
                                                <Trigger Property="IsPressed" Value="true">
                                                    <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Pressed.Glyph}"/>
                                                </Trigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Background}"/>
                                                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Border}"/>
                                                </MultiDataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Background}"/>
                                                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Border}"/>
                                                    <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Background}"/>
                                                    <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Border}"/>
                                                </MultiDataTrigger>
                                                <Trigger Property="IsEnabled" Value="false">
                                                    <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Disabled.Glyph}"/>
                                                </Trigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Background}"/>
                                                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Border}"/>
                                                </MultiDataTrigger>
                                                <MultiDataTrigger>
                                                    <MultiDataTrigger.Conditions>
                                                        <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                    </MultiDataTrigger.Conditions>
                                                    <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Background}"/>
                                                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Border}"/>
                                                    <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Background}"/>
                                                    <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Border}"/>
                                                </MultiDataTrigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                            <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
                                <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                                    </Grid.ColumnDefinitions>
                                    <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                                        <Border x:Name="dropDownBorder" BorderBrush="{x:Null}" BorderThickness="0" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                            <ScrollViewer x:Name="DropDownScrollViewer">
                                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                        <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                                    </Canvas>
                                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                </Grid>
                                            </ScrollViewer>
                                        </Border>
                                    </Popup>
                                    <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
                                    <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true"/>
                                    <Trigger Property="HasItems" Value="false">
                                        <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                                    </Trigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsGrouping" Value="true"/>
                                            <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                                    </MultiTrigger>
                                    <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                                        <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                                        <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                            <SolidColorBrush x:Key="TextBox.Static.Background" Color="#FFFFFFFF"/>
                            <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
                                <Setter Property="OverridesDefaultStyle" Value="true"/>
                                <Setter Property="AllowDrop" Value="true"/>
                                <Setter Property="MinWidth" Value="0"/>
                                <Setter Property="MinHeight" Value="0"/>
                                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
                                <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type TextBox}">
                                            <ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                            <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
                                <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                                    </Grid.ColumnDefinitions>
                                    <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                                        <Themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                                            <Border x:Name="dropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                                                <ScrollViewer x:Name="DropDownScrollViewer">
                                                    <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                                        <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                            <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                                        </Canvas>
                                                        <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                    </Grid>
                                                </ScrollViewer>
                                            </Border>
                                        </Themes:SystemDropShadowChrome>
                                    </Popup>
                                    <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
                                    <Border x:Name="border" Background="{StaticResource TextBox.Static.Background}" Margin="{TemplateBinding BorderThickness}">
                                        <TextBox x:Name="PART_EditableTextBox" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" Margin="{TemplateBinding Padding}" Style="{StaticResource ComboBoxEditableTextBox}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    </Border>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                                    </Trigger>
                                    <Trigger Property="IsKeyboardFocusWithin" Value="true">
                                        <Setter Property="Foreground" Value="Black"/>
                                    </Trigger>
                                    <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                                        <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                                        <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                                    </Trigger>
                                    <Trigger Property="HasItems" Value="false">
                                        <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                                    </Trigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsGrouping" Value="true"/>
                                            <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                                    </MultiTrigger>
                                    <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                                        <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                                        <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                            <Style x:Key="ComboBoxStyle1" TargetType="{x:Type ComboBox}">
                                <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                                <Setter Property="Background" Value="{StaticResource ComboBox.Static.Background}"/>
                                <Setter Property="BorderBrush" Value="{StaticResource ComboBox.Static.Border}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
                                <Setter Property="BorderThickness" Value="1"/>
                                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
                                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
                                <Setter Property="Padding" Value="6,3,5,3"/>
                                <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
                                <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
                                <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                                <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}"/>
                                <Style.Triggers>
                                    <Trigger Property="IsEditable" Value="true">
                                        <Setter Property="IsTabStop" Value="false"/>
                                        <Setter Property="Padding" Value="2"/>
                                        <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                            <ImageBrush x:Key="ComboBoxItem.ItemsviewHover.Background" ImageSource="UIElements/dropdown-hvr.png" />
                            <SolidColorBrush x:Key="ComboBoxItem.ItemsviewHover.Border" Color="#0026A0DA"/>
                            <ImageBrush x:Key="ComboBoxItem.ItemsviewSelected.Background" ImageSource="UIElements/dropdown-hvr.png" />
                            <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelected.Border" Color="#0026A0DA"/>
                            <ImageBrush x:Key="ComboBoxItem.ItemsviewSelectedHover.Background" ImageSource="UIElements/dropdown-hvr.png" />
                            <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelectedHover.Border" Color="#00006CD9"/>
                            <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelectedNoFocus.Background" Color="#3DDADADA"/>
                            <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelectedNoFocus.Border" Color="#FFDADADA"/>
                            <SolidColorBrush x:Key="ComboBoxItem.ItemsviewFocus.Border" Color="#0026A0DA"/>
                            <ImageBrush x:Key="ComboBoxItem.ItemsviewHoverFocus.Background" ImageSource="UIElements/dropdown-hvr.png" />
                            <SolidColorBrush x:Key="ComboBoxItem.ItemsviewHoverFocus.Border" Color="#0026A0DA"/>
                            <Style x:Key="ComboBoxItemStyle1" TargetType="{x:Type ComboBoxItem}">
                                <Setter Property="SnapsToDevicePixels" Value="True"/>
                                <Setter Property="Padding" Value="4,1"/>
                                <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                                <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="BorderBrush" Value="Transparent"/>
                                <Setter Property="BorderThickness" Value="1"/>
                                <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                                            <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                                </Trigger>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="IsSelected" Value="False"/>
                                                        <Condition Property="IsMouseOver" Value="True"/>
                                                        <Condition Property="IsKeyboardFocused" Value="False"/>
                                                    </MultiTrigger.Conditions>
                                                    <Setter Property="Background" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewHover.Background}"/>
                                                    <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewHover.Border}"/>
                                                </MultiTrigger>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="IsSelected" Value="True"/>
                                                        <Condition Property="IsMouseOver" Value="False"/>
                                                        <Condition Property="IsKeyboardFocused" Value="True"/>
                                                    </MultiTrigger.Conditions>
                                                    <Setter Property="Background" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewSelected.Background}"/>
                                                    <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewSelected.Border}"/>
                                                </MultiTrigger>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="IsSelected" Value="True"/>
                                                        <Condition Property="IsMouseOver" Value="True"/>
                                                    </MultiTrigger.Conditions>
                                                    <Setter Property="Background" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewSelectedHover.Background}"/>
                                                    <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewSelectedHover.Border}"/>
                                                </MultiTrigger>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="IsSelected" Value="True"/>
                                                        <Condition Property="IsMouseOver" Value="False"/>
                                                        <Condition Property="IsKeyboardFocused" Value="False"/>
                                                    </MultiTrigger.Conditions>
                                                    <Setter Property="Background" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewSelectedNoFocus.Background}"/>
                                                    <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewSelectedNoFocus.Border}"/>
                                                </MultiTrigger>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="IsSelected" Value="False"/>
                                                        <Condition Property="IsMouseOver" Value="False"/>
                                                        <Condition Property="IsKeyboardFocused" Value="True"/>
                                                    </MultiTrigger.Conditions>
                                                    <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewFocus.Border}"/>
                                                </MultiTrigger>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="IsSelected" Value="False"/>
                                                        <Condition Property="IsMouseOver" Value="True"/>
                                                        <Condition Property="IsKeyboardFocused" Value="True"/>
                                                    </MultiTrigger.Conditions>
                                                    <Setter Property="Background" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewHoverFocus.Background}"/>
                                                    <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewHoverFocus.Border}"/>
                                                </MultiTrigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                            <DataTemplate x:Key="DataTemplate1">
                                <Grid>
                                    <Border BorderBrush="Black" BorderThickness="1" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0"/>
                                    <TextBlock x:Name="textBlock" Margin="0,0,-0.001,0" TextWrapping="Wrap" d:LayoutOverrides="Width, Height" Text="{Binding Mode=OneWay}"/>
                                </Grid>
                            </DataTemplate>
                        </ComboBox.Resources>
                    </ComboBox>
                    <local:NumbericBox x:Name="参数设置1" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="37,115.667,0,0" Height="21.333" BorderThickness="0,0,0,1" BorderBrush="#1E000000" Foreground="#89000000" Width="80"/>
                    <local:NumbericBox x:Name="参数设置2" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="177,115.667,0,0" Height="21.333" BorderThickness="0,0,0,1" BorderBrush="#1E000000" Foreground="#89000000" Width="80"/>
                    <local:NumbericBox x:Name="参数设置3" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="317,115.667,0,0" Height="21.333" BorderThickness="0,0,0,1" BorderBrush="#1E000000" Foreground="#89000000" Width="80"/>
                    <Path x:Name="指标设置下分割线" Data="M40,205 L419,205" Fill="#1E000000" HorizontalAlignment="Left" Height="1" Margin="17,177,0,0" Stretch="Fill" Stroke="#1E000000" VerticalAlignment="Top" Width="403"/>
                    <TextBlock x:Name="买入点" HorizontalAlignment="Left" Height="20" Margin="37,218.5,0,0" TextWrapping="Wrap" Text="买入点" VerticalAlignment="Top" Width="40" FontSize="13" Foreground="#DD000000" d:LayoutOverrides="VerticalAlignment"/>
                    <TextBlock x:Name="卖出点" HorizontalAlignment="Left" Margin="37,276.836,0,0" TextWrapping="Wrap" Text="卖出点" Width="40" FontSize="13" Foreground="#DD000000" Height="20" VerticalAlignment="Top"/>
                    <TextBlock x:Name="其他" HorizontalAlignment="Left" Margin="37,335.172,0,0" TextWrapping="Wrap" Text="其他" Width="40" FontSize="13" Foreground="#DD000000" Height="20" VerticalAlignment="Top"/>
                    <Label x:Name="买入点内容" Content="{Binding 当前选中股票的买入点}" HorizontalAlignment="Left" Height="24" Margin="197,218.5,0,0" VerticalAlignment="Top" Width="200" FontSize="13" BorderBrush="#1E000000" Foreground="#DD000000" BorderThickness="0,0,0,1" Padding="0,0,5,5"/>
                    <Label x:Name="卖出点内容" Content="{Binding 当前选中股票的卖出点}" HorizontalAlignment="Left" Margin="197,276.836,0,0" Width="200" FontSize="13" BorderBrush="#1E000000" Foreground="#DD000000" BorderThickness="0,0,0,1" Padding="0,0,5,5" Height="24" VerticalAlignment="Top"/>
                    <Label x:Name="其他内容1" Content="{Binding 当前选中股票备注}" HorizontalAlignment="Left" Margin="197,335.172,0,0" Width="200" FontSize="13" BorderBrush="#1E000000" Foreground="#DD000000" BorderThickness="0,0,0,1" Padding="0,0,5,5" Height="24" VerticalAlignment="Top"/>
                    <Label x:Name="其他内容2" Content="绑定数据元素" HorizontalAlignment="Left" Margin="197,394.667,0,0" Width="200" FontSize="13" BorderBrush="#1E000000" Foreground="#DD000000" BorderThickness="0,0,0,1" Padding="0,0,5,5" Height="24" VerticalAlignment="Top"/>
                    <TextBlock x:Name="方案提示" HorizontalAlignment="Left" Height="44" Margin="477,18,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="260.666" FontSize="13" Padding="0,5,0,0"><Run Text="方案中有多个指标时，有效的方案买入信号为"/><LineBreak/><Run Text="三日内各指标均发出买入信号 "/></TextBlock>
                    <Path x:Name="方案提示下分割线" Data="M479.66667,107.66667 L849.02166,107.66667" Fill="#1E000000" HorizontalAlignment="Left" Height="1" Margin="477,78,0,0" Stretch="Fill" Stroke="#1E000000" VerticalAlignment="Top" Width="372"/>
                    <ListView x:Name="listView" HorizontalAlignment="Left" Margin="477,109.172,0,155.828" Width="372" ItemsSource="{Binding 已配置的指标}" ItemTemplate="{DynamicResource DataTemplate1}">
                        <ListView.Resources>
                            <Style TargetType="GridViewColumnHeader">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </Style>
                            <DataTemplate x:Key="DataTemplate1">
                                <Grid>
                                    <Label x:Name="label" Content="{Binding Mode=OneWay}" d:LayoutOverrides="Width, Height" Padding="0"/>
                                </Grid>
                            </DataTemplate>
                        </ListView.Resources>
                    </ListView>
                </Grid>
            </TabItem>
            <TabItem x:Name="日期设置" Header="日期" Height="60" Margin="42,-2,-42,0" VerticalAlignment="Top" Width="166" Style="{DynamicResource TabItemStyle1}" Foreground="#DD000000" BorderBrush="{x:Null}" Padding="90,2,6,2" FontSize="20" Template="{DynamicResource TabTemplate}" HorizontalAlignment="Left" d:LayoutOverrides="Width">
                <TabItem.Resources>
                    <Style x:Key="FocusVisual">
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <ImageBrush x:Key="TabItem.Static.Background" ImageSource="UIElements/时段BG_normal.png" />
                    <SolidColorBrush x:Key="TabItem.Static.Border" Color="#00ACACAC"/>
                    <ImageBrush x:Key="TabItem.MouseOver.Background" ImageSource="UIElements/时段BG_hover.png" />
                    <SolidColorBrush x:Key="TabItem.MouseOver.Border" Color="#007EB4EA"/>
                    <SolidColorBrush x:Key="TabItem.Disabled.Background" Color="#F0F0F0"/>
                    <SolidColorBrush x:Key="TabItem.Disabled.Border" Color="#D9D9D9"/>
                    <SolidColorBrush x:Key="TabItem.Selected.Border" Color="#00ACACAC"/>
                    <ImageBrush x:Key="TabItem.Selected.Background" ImageSource="UIElements/时段BG_pressed.png" />
                    <Style x:Key="TabItemStyle1" TargetType="{x:Type TabItem}">
                        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                        <Setter Property="Foreground" Value="Black"/>
                        <Setter Property="Background" Value="{StaticResource TabItem.Static.Background}"/>
                        <Setter Property="BorderBrush" Value="{StaticResource TabItem.Static.Border}"/>
                        <Setter Property="Margin" Value="0"/>
                        <Setter Property="Padding" Value="6,2,6,2"/>
                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type TabItem}">
                                    <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                                        <Border x:Name="mainBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,1,1,0" Background="{TemplateBinding Background}" Margin="0">
                                            <Border x:Name="innerBorder" BorderBrush="{StaticResource TabItem.Selected.Border}" BorderThickness="1,1,1,0" Background="{StaticResource TabItem.Selected.Background}" Margin="-1" Opacity="0"/>
                                        </Border>
                                        <ContentPresenter x:Name="contentPresenter" ContentSource="Header" Focusable="False" HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
                                            <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
                                            <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
                                            <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
                                            <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                            <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                                            <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                            <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                                            <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                            <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                                            <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                            <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                                            <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Panel.ZIndex" Value="1"/>
                                            <Setter Property="Margin" Value="-2,-2,0,-2"/>
                                            <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Panel.ZIndex" Value="1"/>
                                            <Setter Property="Margin" Value="-2,0,-2,-2"/>
                                            <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Panel.ZIndex" Value="1"/>
                                            <Setter Property="Margin" Value="0,-2,-2,-2"/>
                                            <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Panel.ZIndex" Value="1"/>
                                            <Setter Property="Margin" Value="-2,-2,-2,0"/>
                                            <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                                        </MultiDataTrigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </TabItem.Resources>
                <TabItem.Background>
                    <ImageBrush ImageSource="UIElements/时段BG_normal.png"/>
                </TabItem.Background>
                <Grid>
                    <TextBlock x:Name="评测起始时间" HorizontalAlignment="Left" Height="20" Margin="37,17,0,0" TextWrapping="Wrap" Text="评测起始时间" VerticalAlignment="Top" Width="96" FontSize="16"/>
                    <DatePicker HorizontalAlignment="Left" Margin="292,17,0,0" VerticalAlignment="Top" Width="116" Style="{DynamicResource DatePickerStyle1}" CalendarStyle="{DynamicResource CalendarStyle1}" FontSize="16" SelectedDate="{Binding 起始时间}" SelectedDateFormat="Long">
                        <DatePicker.Resources>
                            <Style x:Key="DatePickerStyle1" TargetType="{x:Type DatePicker}">
                                <Setter Property="Foreground" Value="#FF333333"/>
                                <Setter Property="IsTodayHighlighted" Value="True"/>
                                <Setter Property="SelectedDateFormat" Value="Short"/>
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="Padding" Value="2"/>
                                <Setter Property="BorderBrush">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint=".5,0" StartPoint=".5,1">
                                            <GradientStop Color="#FFA3AEB9" Offset="0"/>
                                            <GradientStop Color="#FF8399A9" Offset="0.375"/>
                                            <GradientStop Color="#FF718597" Offset="0.375"/>
                                            <GradientStop Color="#FF617584" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="BorderThickness" Value="1"/>
                                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type DatePicker}">
                                            <Border BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup x:Name="CommonStates">
                                                        <VisualState x:Name="Normal"/>
                                                        <VisualState x:Name="Disabled">
                                                            <Storyboard>
                                                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_DisabledVisual"/>
                                                            </Storyboard>
                                                        </VisualState>
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>
                                                <Grid x:Name="PART_Root" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                                    <Grid.Resources>
                                                        <SolidColorBrush x:Key="DisabledBrush" Color="#A5FFFFFF"/>
                                                        <ControlTemplate x:Key="DropDownButtonTemplate" TargetType="{x:Type Button}">
                                                            <Grid>
                                                                <VisualStateManager.VisualStateGroups>
                                                                    <VisualStateGroup x:Name="CommonStates">
                                                                        <VisualStateGroup.Transitions>
                                                                            <VisualTransition GeneratedDuration="0"/>
                                                                            <VisualTransition GeneratedDuration="0:0:0.1" To="MouseOver"/>
                                                                            <VisualTransition GeneratedDuration="0:0:0.1" To="Pressed"/>
                                                                        </VisualStateGroup.Transitions>
                                                                        <VisualState x:Name="Normal"/>
                                                                        <VisualState x:Name="MouseOver">
                                                                            <Storyboard>
                                                                                <ColorAnimation Duration="0" To="#FF448DCA" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Background"/>
                                                                                <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                                                    <SplineColorKeyFrame KeyTime="0" Value="#7FFFFFFF"/>
                                                                                </ColorAnimationUsingKeyFrames>
                                                                                <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                                                    <SplineColorKeyFrame KeyTime="0" Value="#CCFFFFFF"/>
                                                                                </ColorAnimationUsingKeyFrames>
                                                                                <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                                                    <SplineColorKeyFrame KeyTime="0" Value="#F2FFFFFF"/>
                                                                                </ColorAnimationUsingKeyFrames>
                                                                            </Storyboard>
                                                                        </VisualState>
                                                                        <VisualState x:Name="Pressed">
                                                                            <Storyboard>
                                                                                <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Background">
                                                                                    <SplineColorKeyFrame KeyTime="0" Value="#FF448DCA"/>
                                                                                </ColorAnimationUsingKeyFrames>
                                                                                <DoubleAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Highlight">
                                                                                    <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                                                                                </DoubleAnimationUsingKeyFrames>
                                                                                <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                                                    <SplineColorKeyFrame KeyTime="0" Value="#EAFFFFFF"/>
                                                                                </ColorAnimationUsingKeyFrames>
                                                                                <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                                                    <SplineColorKeyFrame KeyTime="0" Value="#C6FFFFFF"/>
                                                                                </ColorAnimationUsingKeyFrames>
                                                                                <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                                                    <SplineColorKeyFrame KeyTime="0" Value="#6BFFFFFF"/>
                                                                                </ColorAnimationUsingKeyFrames>
                                                                                <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                                                    <SplineColorKeyFrame KeyTime="0" Value="#F4FFFFFF"/>
                                                                                </ColorAnimationUsingKeyFrames>
                                                                            </Storyboard>
                                                                        </VisualState>
                                                                        <VisualState x:Name="Disabled"/>
                                                                    </VisualStateGroup>
                                                                </VisualStateManager.VisualStateGroups>
                                                                <Grid Background="#11FFFFFF" FlowDirection="LeftToRight" HorizontalAlignment="Center" Height="18" Margin="0" VerticalAlignment="Center" Width="19">
                                                                    <Grid.ColumnDefinitions>
                                                                        <ColumnDefinition Width="20*"/>
                                                                        <ColumnDefinition Width="20*"/>
                                                                        <ColumnDefinition Width="20*"/>
                                                                        <ColumnDefinition Width="20*"/>
                                                                    </Grid.ColumnDefinitions>
                                                                    <Grid.RowDefinitions>
                                                                        <RowDefinition Height="23*"/>
                                                                        <RowDefinition Height="19*"/>
                                                                        <RowDefinition Height="19*"/>
                                                                        <RowDefinition Height="19*"/>
                                                                    </Grid.RowDefinitions>
                                                                    <Border x:Name="Highlight" BorderBrush="#FF45D6FA" BorderThickness="1" Grid.ColumnSpan="4" CornerRadius="0,0,1,1" Margin="-1" Opacity="0" Grid.Row="0" Grid.RowSpan="4"/>
                                                                    <Border x:Name="Background" BorderBrush="#FFFFFFFF" BorderThickness="1" Background="#FF1F3B53" Grid.ColumnSpan="4" CornerRadius=".5" Margin="0,-1,0,0" Opacity="1" Grid.Row="1" Grid.RowSpan="3"/>
                                                                    <Border x:Name="BackgroundGradient" BorderBrush="#BF000000" BorderThickness="1" Grid.ColumnSpan="4" CornerRadius=".5" Margin="0,-1,0,0" Opacity="1" Grid.Row="1" Grid.RowSpan="3">
                                                                        <Border.Background>
                                                                            <LinearGradientBrush EndPoint=".7,1" StartPoint=".7,0">
                                                                                <GradientStop Color="#FFFFFFFF" Offset="0"/>
                                                                                <GradientStop Color="#F9FFFFFF" Offset="0.375"/>
                                                                                <GradientStop Color="#E5FFFFFF" Offset="0.625"/>
                                                                                <GradientStop Color="#C6FFFFFF" Offset="1"/>
                                                                            </LinearGradientBrush>
                                                                        </Border.Background>
                                                                    </Border>
                                                                    <Rectangle Grid.ColumnSpan="4" Grid.RowSpan="1" StrokeThickness="1">
                                                                        <Rectangle.Fill>
                                                                            <LinearGradientBrush EndPoint="0.3,-1.1" StartPoint="0.46,1.6">
                                                                                <GradientStop Color="#FF4084BD"/>
                                                                                <GradientStop Color="#FFAFCFEA" Offset="1"/>
                                                                            </LinearGradientBrush>
                                                                        </Rectangle.Fill>
                                                                        <Rectangle.Stroke>
                                                                            <LinearGradientBrush EndPoint="0.48,-1" StartPoint="0.48,1.25">
                                                                                <GradientStop Color="#FF494949"/>
                                                                                <GradientStop Color="#FF9F9F9F" Offset="1"/>
                                                                            </LinearGradientBrush>
                                                                        </Rectangle.Stroke>
                                                                    </Rectangle>
                                                                    <Path Grid.ColumnSpan="4" Grid.Column="0" Data="M11.426758,8.4305077 L11.749023,8.4305077 L11.749023,16.331387 L10.674805,16.331387 L10.674805,10.299648 L9.0742188,11.298672 L9.0742188,10.294277 C9.4788408,10.090176 9.9094238,9.8090878 10.365967,9.4510155 C10.82251,9.0929432 11.176106,8.7527733 11.426758,8.4305077 z M14.65086,8.4305077 L18.566387,8.4305077 L18.566387,9.3435936 L15.671368,9.3435936 L15.671368,11.255703 C15.936341,11.058764 16.27293,10.960293 16.681133,10.960293 C17.411602,10.960293 17.969301,11.178717 18.354229,11.615566 C18.739157,12.052416 18.931622,12.673672 18.931622,13.479336 C18.931622,15.452317 18.052553,16.438808 16.294415,16.438808 C15.560365,16.438808 14.951641,16.234707 14.468243,15.826504 L14.881817,14.929531 C15.368796,15.326992 15.837872,15.525723 16.289043,15.525723 C17.298809,15.525723 17.803692,14.895514 17.803692,13.635098 C17.803692,12.460618 17.305971,11.873379 16.310528,11.873379 C15.83071,11.873379 15.399232,12.079271 15.016094,12.491055 L14.65086,12.238613 z" Fill="#FF2F2F2F" HorizontalAlignment="Center" Margin="4,3,4,3" Grid.Row="1" Grid.RowSpan="3" RenderTransformOrigin="0.5,0.5" Stretch="Fill" VerticalAlignment="Center"/>
                                                                    <Ellipse Grid.ColumnSpan="4" Fill="#FFFFFFFF" HorizontalAlignment="Center" Height="3" StrokeThickness="0" VerticalAlignment="Center" Width="3"/>
                                                                    <Border x:Name="DisabledVisual" BorderBrush="#B2FFFFFF" BorderThickness="1" Grid.ColumnSpan="4" CornerRadius="0,0,.5,.5" Opacity="0" Grid.Row="0" Grid.RowSpan="4"/>
                                                                </Grid>
                                                            </Grid>
                                                        </ControlTemplate>
                                                    </Grid.Resources>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="*"/>
                                                        <ColumnDefinition Width="Auto"/>
                                                    </Grid.ColumnDefinitions>
                                                    <Button x:Name="PART_Button" Grid.Column="1" Foreground="{TemplateBinding Foreground}" Focusable="False" HorizontalAlignment="Center" Margin="3,0,3,0" Grid.Row="0" Template="{StaticResource DropDownButtonTemplate}" VerticalAlignment="Center" Width="20"/>
                                                    <DatePickerTextBox x:Name="PART_TextBox" Grid.Column="0" Focusable="{TemplateBinding Focusable}" HorizontalContentAlignment="Stretch" Grid.Row="0" VerticalContentAlignment="Stretch" Text="2015/5月24日"/>
                                                    <Grid x:Name="PART_DisabledVisual" Grid.ColumnSpan="2" Grid.Column="0" IsHitTestVisible="False" Opacity="0" Grid.Row="0">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="*"/>
                                                            <ColumnDefinition Width="Auto"/>
                                                        </Grid.ColumnDefinitions>
                                                        <Rectangle Grid.Column="0" Fill="#A5FFFFFF" RadiusY="1" Grid.Row="0" RadiusX="1"/>
                                                        <Rectangle Grid.Column="1" Fill="#A5FFFFFF" Height="18" Margin="3,0,3,0" RadiusY="1" Grid.Row="0" RadiusX="1" Width="19"/>
                                                        <Popup x:Name="PART_Popup" AllowsTransparency="True" Placement="Bottom" PlacementTarget="{Binding ElementName=PART_TextBox}" StaysOpen="False"/>
                                                    </Grid>
                                                </Grid>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="false">
                                                    <Setter Property="Foreground" TargetName="PART_TextBox" Value="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                </DataTrigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                            <Style x:Key="CalendarStyle1" TargetType="{x:Type Calendar}">
                                <Setter Property="Foreground" Value="#FF333333"/>
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FFE4EAF0" Offset="0"/>
                                            <GradientStop Color="#FFECF0F4" Offset="0.16"/>
                                            <GradientStop Color="#FFFCFCFD" Offset="0.16"/>
                                            <GradientStop Color="#FFFFFFFF" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="BorderBrush">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FFA3AEB9" Offset="0"/>
                                            <GradientStop Color="#FF8399A9" Offset="0.375"/>
                                            <GradientStop Color="#FF718597" Offset="0.375"/>
                                            <GradientStop Color="#FF617584" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="BorderThickness" Value="1"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Calendar}">
                                            <StackPanel x:Name="PART_Root" HorizontalAlignment="Center">
                                                <CalendarItem x:Name="PART_CalendarItem" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Style="{TemplateBinding CalendarItemStyle}" d:IsHidden="True"/>
                                            </StackPanel>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </DatePicker.Resources>
                    </DatePicker>
                    <TextBlock x:Name="首次投入资金比例" HorizontalAlignment="Left" Height="20" Margin="37,117,0,0" TextWrapping="Wrap" Text="首次投入资金比例" VerticalAlignment="Top" Width="130" FontSize="16"/>
                    <local:NumbericBox x:Name="输入框2" HorizontalAlignment="Left" VerticalAlignment="Top" d:LayoutOverrides="Height" Margin="292,117,0,0" Width="116" FontSize="16" BorderBrush="#1E000000" BorderThickness="0,0,0,1" Content="{Binding 首次投入资金比例}"/>
                    <TextBlock x:Name="投入剩余资金的上涨条件" HorizontalAlignment="Left" Height="20" Margin="37,217,0,0" TextWrapping="Wrap" Text="投入剩余资金的上涨条件" VerticalAlignment="Top" Width="178" FontSize="16" d:LayoutOverrides="VerticalAlignment"/>
                    <local:NumbericBox x:Name="输入框3" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="292,217,0,0" Width="116" FontSize="16" d:LayoutOverrides="VerticalAlignment, Height" Content="{Binding 投入剩余资金上涨条件}"/>
                    <CheckBox x:Name="止盈率" Content="止盈率" HorizontalAlignment="Left" Height="19" Margin="37,0,0,145" VerticalAlignment="Bottom" Width="119" FontSize="16" Background="White" Foreground="#DD000000" d:LayoutOverrides="VerticalAlignment" IsChecked="{Binding 止盈率启用}"/>
                    <local:NumbericBox x:Name="输入框4" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="292,0,0,139" Width="116" FontSize="16" BorderBrush="#1E000000" d:LayoutOverrides="VerticalAlignment, Height" Content="{Binding 止盈率}" IsEnabled="{Binding 止盈率启用}"/>
                    <CheckBox x:Name="固定交易周期" Content="固定交易周期" HorizontalAlignment="Left" Height="19" Margin="37,0,0,57" VerticalAlignment="Bottom" Width="119" FontSize="16" Background="White" Foreground="#DD000000" IsChecked="{Binding 固定交易周期启用}"/>
                    <local:NumbericBox x:Name="输入框5" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="292,0,0,51" Width="116" FontSize="16" BorderBrush="#1E000000" d:LayoutOverrides="Height" IsEnabled="{Binding 固定交易周期启用}" Content="{Binding 固定交易周期}"/>
                    <TextBlock x:Name="评测结束时间" HorizontalAlignment="Left" Height="20" Margin="477,17,0,0" TextWrapping="Wrap" Text="评测结束时间" VerticalAlignment="Top" Width="96" FontSize="16"/>
                    <DatePicker HorizontalAlignment="Left" Margin="733,17,0,0" VerticalAlignment="Top" Width="116" Style="{DynamicResource DatePickerStyle1}" CalendarStyle="{DynamicResource CalendarStyle1}" FontSize="16" SelectedDate="{Binding 结束时间}">
                        <DatePicker.Resources>
                            <Style x:Key="DatePickerStyle1" TargetType="{x:Type DatePicker}">
                                <Setter Property="Foreground" Value="#FF333333"/>
                                <Setter Property="IsTodayHighlighted" Value="True"/>
                                <Setter Property="SelectedDateFormat" Value="Short"/>
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="Padding" Value="2"/>
                                <Setter Property="BorderBrush">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint=".5,0" StartPoint=".5,1">
                                            <GradientStop Color="#FFA3AEB9" Offset="0"/>
                                            <GradientStop Color="#FF8399A9" Offset="0.375"/>
                                            <GradientStop Color="#FF718597" Offset="0.375"/>
                                            <GradientStop Color="#FF617584" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="BorderThickness" Value="1"/>
                                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type DatePicker}">
                                            <Border BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup x:Name="CommonStates">
                                                        <VisualState x:Name="Normal"/>
                                                        <VisualState x:Name="Disabled">
                                                            <Storyboard>
                                                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_DisabledVisual"/>
                                                            </Storyboard>
                                                        </VisualState>
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>
                                                <Grid x:Name="PART_Root" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                                    <Grid.Resources>
                                                        <SolidColorBrush x:Key="DisabledBrush" Color="#A5FFFFFF"/>
                                                        <ControlTemplate x:Key="DropDownButtonTemplate" TargetType="{x:Type Button}">
                                                            <Grid>
                                                                <VisualStateManager.VisualStateGroups>
                                                                    <VisualStateGroup x:Name="CommonStates">
                                                                        <VisualStateGroup.Transitions>
                                                                            <VisualTransition GeneratedDuration="0"/>
                                                                            <VisualTransition GeneratedDuration="0:0:0.1" To="MouseOver"/>
                                                                            <VisualTransition GeneratedDuration="0:0:0.1" To="Pressed"/>
                                                                        </VisualStateGroup.Transitions>
                                                                        <VisualState x:Name="Normal"/>
                                                                        <VisualState x:Name="MouseOver">
                                                                            <Storyboard>
                                                                                <ColorAnimation Duration="0" To="#FF448DCA" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Background"/>
                                                                                <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                                                    <SplineColorKeyFrame KeyTime="0" Value="#7FFFFFFF"/>
                                                                                </ColorAnimationUsingKeyFrames>
                                                                                <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                                                    <SplineColorKeyFrame KeyTime="0" Value="#CCFFFFFF"/>
                                                                                </ColorAnimationUsingKeyFrames>
                                                                                <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                                                    <SplineColorKeyFrame KeyTime="0" Value="#F2FFFFFF"/>
                                                                                </ColorAnimationUsingKeyFrames>
                                                                            </Storyboard>
                                                                        </VisualState>
                                                                        <VisualState x:Name="Pressed">
                                                                            <Storyboard>
                                                                                <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Background">
                                                                                    <SplineColorKeyFrame KeyTime="0" Value="#FF448DCA"/>
                                                                                </ColorAnimationUsingKeyFrames>
                                                                                <DoubleAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Highlight">
                                                                                    <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                                                                                </DoubleAnimationUsingKeyFrames>
                                                                                <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                                                    <SplineColorKeyFrame KeyTime="0" Value="#EAFFFFFF"/>
                                                                                </ColorAnimationUsingKeyFrames>
                                                                                <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                                                    <SplineColorKeyFrame KeyTime="0" Value="#C6FFFFFF"/>
                                                                                </ColorAnimationUsingKeyFrames>
                                                                                <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                                                    <SplineColorKeyFrame KeyTime="0" Value="#6BFFFFFF"/>
                                                                                </ColorAnimationUsingKeyFrames>
                                                                                <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                                                    <SplineColorKeyFrame KeyTime="0" Value="#F4FFFFFF"/>
                                                                                </ColorAnimationUsingKeyFrames>
                                                                            </Storyboard>
                                                                        </VisualState>
                                                                        <VisualState x:Name="Disabled"/>
                                                                    </VisualStateGroup>
                                                                </VisualStateManager.VisualStateGroups>
                                                                <Grid Background="#11FFFFFF" FlowDirection="LeftToRight" HorizontalAlignment="Center" Height="18" Margin="0" VerticalAlignment="Center" Width="19">
                                                                    <Grid.ColumnDefinitions>
                                                                        <ColumnDefinition Width="20*"/>
                                                                        <ColumnDefinition Width="20*"/>
                                                                        <ColumnDefinition Width="20*"/>
                                                                        <ColumnDefinition Width="20*"/>
                                                                    </Grid.ColumnDefinitions>
                                                                    <Grid.RowDefinitions>
                                                                        <RowDefinition Height="23*"/>
                                                                        <RowDefinition Height="19*"/>
                                                                        <RowDefinition Height="19*"/>
                                                                        <RowDefinition Height="19*"/>
                                                                    </Grid.RowDefinitions>
                                                                    <Border x:Name="Highlight" BorderBrush="#FF45D6FA" BorderThickness="1" Grid.ColumnSpan="4" CornerRadius="0,0,1,1" Margin="-1" Opacity="0" Grid.Row="0" Grid.RowSpan="4"/>
                                                                    <Border x:Name="Background" BorderBrush="#FFFFFFFF" BorderThickness="1" Background="#FF1F3B53" Grid.ColumnSpan="4" CornerRadius=".5" Margin="0,-1,0,0" Opacity="1" Grid.Row="1" Grid.RowSpan="3"/>
                                                                    <Border x:Name="BackgroundGradient" BorderBrush="#BF000000" BorderThickness="1" Grid.ColumnSpan="4" CornerRadius=".5" Margin="0,-1,0,0" Opacity="1" Grid.Row="1" Grid.RowSpan="3">
                                                                        <Border.Background>
                                                                            <LinearGradientBrush EndPoint=".7,1" StartPoint=".7,0">
                                                                                <GradientStop Color="#FFFFFFFF" Offset="0"/>
                                                                                <GradientStop Color="#F9FFFFFF" Offset="0.375"/>
                                                                                <GradientStop Color="#E5FFFFFF" Offset="0.625"/>
                                                                                <GradientStop Color="#C6FFFFFF" Offset="1"/>
                                                                            </LinearGradientBrush>
                                                                        </Border.Background>
                                                                    </Border>
                                                                    <Rectangle Grid.ColumnSpan="4" Grid.RowSpan="1" StrokeThickness="1">
                                                                        <Rectangle.Fill>
                                                                            <LinearGradientBrush EndPoint="0.3,-1.1" StartPoint="0.46,1.6">
                                                                                <GradientStop Color="#FF4084BD"/>
                                                                                <GradientStop Color="#FFAFCFEA" Offset="1"/>
                                                                            </LinearGradientBrush>
                                                                        </Rectangle.Fill>
                                                                        <Rectangle.Stroke>
                                                                            <LinearGradientBrush EndPoint="0.48,-1" StartPoint="0.48,1.25">
                                                                                <GradientStop Color="#FF494949"/>
                                                                                <GradientStop Color="#FF9F9F9F" Offset="1"/>
                                                                            </LinearGradientBrush>
                                                                        </Rectangle.Stroke>
                                                                    </Rectangle>
                                                                    <Path Grid.ColumnSpan="4" Grid.Column="0" Data="M11.426758,8.4305077 L11.749023,8.4305077 L11.749023,16.331387 L10.674805,16.331387 L10.674805,10.299648 L9.0742188,11.298672 L9.0742188,10.294277 C9.4788408,10.090176 9.9094238,9.8090878 10.365967,9.4510155 C10.82251,9.0929432 11.176106,8.7527733 11.426758,8.4305077 z M14.65086,8.4305077 L18.566387,8.4305077 L18.566387,9.3435936 L15.671368,9.3435936 L15.671368,11.255703 C15.936341,11.058764 16.27293,10.960293 16.681133,10.960293 C17.411602,10.960293 17.969301,11.178717 18.354229,11.615566 C18.739157,12.052416 18.931622,12.673672 18.931622,13.479336 C18.931622,15.452317 18.052553,16.438808 16.294415,16.438808 C15.560365,16.438808 14.951641,16.234707 14.468243,15.826504 L14.881817,14.929531 C15.368796,15.326992 15.837872,15.525723 16.289043,15.525723 C17.298809,15.525723 17.803692,14.895514 17.803692,13.635098 C17.803692,12.460618 17.305971,11.873379 16.310528,11.873379 C15.83071,11.873379 15.399232,12.079271 15.016094,12.491055 L14.65086,12.238613 z" Fill="#FF2F2F2F" HorizontalAlignment="Center" Margin="4,3,4,3" Grid.Row="1" Grid.RowSpan="3" RenderTransformOrigin="0.5,0.5" Stretch="Fill" VerticalAlignment="Center"/>
                                                                    <Ellipse Grid.ColumnSpan="4" Fill="#FFFFFFFF" HorizontalAlignment="Center" Height="3" StrokeThickness="0" VerticalAlignment="Center" Width="3"/>
                                                                    <Border x:Name="DisabledVisual" BorderBrush="#B2FFFFFF" BorderThickness="1" Grid.ColumnSpan="4" CornerRadius="0,0,.5,.5" Opacity="0" Grid.Row="0" Grid.RowSpan="4"/>
                                                                </Grid>
                                                            </Grid>
                                                        </ControlTemplate>
                                                    </Grid.Resources>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="*"/>
                                                        <ColumnDefinition Width="Auto"/>
                                                    </Grid.ColumnDefinitions>
                                                    <Button x:Name="PART_Button" Grid.Column="1" Foreground="{TemplateBinding Foreground}" Focusable="False" HorizontalAlignment="Center" Margin="3,0,3,0" Grid.Row="0" Template="{StaticResource DropDownButtonTemplate}" VerticalAlignment="Center" Width="20"/>
                                                    <DatePickerTextBox x:Name="PART_TextBox" Grid.Column="0" Focusable="{TemplateBinding Focusable}" HorizontalContentAlignment="Stretch" Grid.Row="0" VerticalContentAlignment="Stretch"/>
                                                    <Grid x:Name="PART_DisabledVisual" Grid.ColumnSpan="2" Grid.Column="0" IsHitTestVisible="False" Opacity="0" Grid.Row="0">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="*"/>
                                                            <ColumnDefinition Width="Auto"/>
                                                        </Grid.ColumnDefinitions>
                                                        <Rectangle Grid.Column="0" Fill="#A5FFFFFF" RadiusY="1" Grid.Row="0" RadiusX="1"/>
                                                        <Rectangle Grid.Column="1" Fill="#A5FFFFFF" Height="18" Margin="3,0,3,0" RadiusY="1" Grid.Row="0" RadiusX="1" Width="19"/>
                                                        <Popup x:Name="PART_Popup" AllowsTransparency="True" Placement="Bottom" PlacementTarget="{Binding ElementName=PART_TextBox}" StaysOpen="False"/>
                                                    </Grid>
                                                </Grid>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="false">
                                                    <Setter Property="Foreground" TargetName="PART_TextBox" Value="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                </DataTrigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                            <Style x:Key="CalendarStyle1" TargetType="{x:Type Calendar}">
                                <Setter Property="Foreground" Value="#FF333333"/>
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FFE4EAF0" Offset="0"/>
                                            <GradientStop Color="#FFECF0F4" Offset="0.16"/>
                                            <GradientStop Color="#FFFCFCFD" Offset="0.16"/>
                                            <GradientStop Color="#FFFFFFFF" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="BorderBrush">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FFA3AEB9" Offset="0"/>
                                            <GradientStop Color="#FF8399A9" Offset="0.375"/>
                                            <GradientStop Color="#FF718597" Offset="0.375"/>
                                            <GradientStop Color="#FF617584" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="BorderThickness" Value="1"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Calendar}">
                                            <StackPanel x:Name="PART_Root" HorizontalAlignment="Center">
                                                <CalendarItem x:Name="PART_CalendarItem" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Style="{TemplateBinding CalendarItemStyle}" d:IsHidden="True"/>
                                            </StackPanel>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </DatePicker.Resources>
                    </DatePicker>
                    <TextBlock x:Name="首次卖出股票比例" HorizontalAlignment="Left" Height="20" Margin="477,117,0,0" TextWrapping="Wrap" Text="首次卖出股票比例" VerticalAlignment="Top" Width="130" FontSize="16"/>
                    <local:NumbericBox x:Name="输入框7" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="733,117,0,0" Width="116" FontSize="16" BorderBrush="#1E000000" Content="{Binding 首次卖出股票比例}"/>
                    <TextBlock x:Name="卖出剩余股票的下跌条件" HorizontalAlignment="Left" Height="20" Margin="477,217,0,0" TextWrapping="Wrap" Text="卖出剩余股票的下跌条件" VerticalAlignment="Top" Width="178" FontSize="16" d:LayoutOverrides="VerticalAlignment"/>
                    <local:NumbericBox x:Name="输入框8" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="733,217,0,0" Width="116" FontSize="16" d:LayoutOverrides="VerticalAlignment, Height" Content="{Binding 卖出剩余股票下跌条件}"/>
                    <CheckBox x:Name="止损率" Content="止损率" HorizontalAlignment="Left" Height="19" Margin="477,0,0,145" VerticalAlignment="Bottom" Width="119" FontSize="16" Background="White" Foreground="#DD000000" d:LayoutOverrides="VerticalAlignment" IsChecked="{Binding 止损率启用}"/>
                    <local:NumbericBox x:Name="输入框9" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="733,0,0,139" Width="116" FontSize="16" BorderBrush="#1E000000" d:LayoutOverrides="VerticalAlignment, Height" Foreground="#DD000000" IsEnabled="{Binding 止损率启用}" Content="{Binding 止损率}"/>
                </Grid>
            </TabItem>
            <TabItem x:Name="标的设置" Header="标的" Margin="86,-2,-88,0" HorizontalAlignment="Left" VerticalAlignment="Top" Width="166" Height="60" Style="{DynamicResource TabItemStyle1}" Foreground="#DD000000" BorderBrush="{x:Null}" Padding="90,2,6,2" FontSize="20" Template="{DynamicResource TabTemplate}">
                <TabItem.Resources>
                    <Style x:Key="FocusVisual">
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <ImageBrush x:Key="TabItem.Static.Background" ImageSource="UIElements/标的BG_normal.png" />
                    <SolidColorBrush x:Key="TabItem.Static.Border" Color="#00ACACAC"/>
                    <ImageBrush x:Key="TabItem.MouseOver.Background" ImageSource="UIElements/标的BG_hover.png" />
                    <SolidColorBrush x:Key="TabItem.MouseOver.Border" Color="#007EB4EA"/>
                    <SolidColorBrush x:Key="TabItem.Disabled.Background" Color="#F0F0F0"/>
                    <SolidColorBrush x:Key="TabItem.Disabled.Border" Color="#D9D9D9"/>
                    <SolidColorBrush x:Key="TabItem.Selected.Border" Color="#00ACACAC"/>
                    <ImageBrush x:Key="TabItem.Selected.Background" ImageSource="UIElements/标的BG_pressed.png" />
                    <Style x:Key="TabItemStyle1" TargetType="{x:Type TabItem}">
                        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                        <Setter Property="Foreground" Value="Black"/>
                        <Setter Property="Background" Value="{StaticResource TabItem.Static.Background}"/>
                        <Setter Property="BorderBrush" Value="{StaticResource TabItem.Static.Border}"/>
                        <Setter Property="Margin" Value="0"/>
                        <Setter Property="Padding" Value="6,2,6,2"/>
                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type TabItem}">
                                    <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                                        <Border x:Name="mainBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,1,1,0" Background="{TemplateBinding Background}" Margin="0">
                                            <Border x:Name="innerBorder" BorderBrush="{StaticResource TabItem.Selected.Border}" BorderThickness="1,1,1,0" Background="{StaticResource TabItem.Selected.Background}" Margin="-1" Opacity="0"/>
                                        </Border>
                                        <ContentPresenter x:Name="contentPresenter" ContentSource="Header" Focusable="False" HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
                                            <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
                                            <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
                                            <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
                                            <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                            <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                                            <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                            <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                                            <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                            <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                                            <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                            <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                                            <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Panel.ZIndex" Value="1"/>
                                            <Setter Property="Margin" Value="-2,-2,0,-2"/>
                                            <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Panel.ZIndex" Value="1"/>
                                            <Setter Property="Margin" Value="-2,0,-2,-2"/>
                                            <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Panel.ZIndex" Value="1"/>
                                            <Setter Property="Margin" Value="0,-2,-2,-2"/>
                                            <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Panel.ZIndex" Value="1"/>
                                            <Setter Property="Margin" Value="-2,-2,-2,0"/>
                                            <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                                        </MultiDataTrigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </TabItem.Resources>
                <TabItem.Background>
                    <ImageBrush ImageSource="UIElements/标的BG_normal.png"/>
                </TabItem.Background>
                <Grid>
                    <CheckBox x:Name="全部股票" Content="全部股票" HorizontalAlignment="Left" Height="25" Margin="37.167,27,0,0" VerticalAlignment="Top" Width="102.666" FontSize="16" IsChecked="{Binding 全部股票选中}"/>
                    <CheckBox x:Name="自定义添加" Content="自定义添加" HorizontalAlignment="Left" Height="25" Margin="293.167,27,0,0" VerticalAlignment="Top" Width="120.666" FontSize="16"/>
                    <local:NumbericBox HorizontalAlignment="Left" VerticalAlignment="Top" Margin="529.667,27,0,0" Width="115" Height="25"/>
                    <Path x:Name="分割线1" Data="M37,100 L829,100" Height="1" Margin="37.167,72,65.833,0" Stretch="Fill" Stroke="#1E000000" VerticalAlignment="Top"/>
                    <ListView x:Name="listView1_Copy" Margin="334,103,0,0" HorizontalAlignment="Left" Width="200" Height="238" VerticalAlignment="Top" ItemsSource="{Binding 已选股票}">
                        <ListView.View>
                            <GridView>
                                <GridViewColumn/>
                            </GridView>
                        </ListView.View>
                    </ListView>
                    <Path x:Name="分割线2" Data="M37,100 L829,100" Height="1" Margin="37,0,66,112" Stretch="Fill" Stroke="#1E000000" VerticalAlignment="Bottom"/>
                    <Button x:Name="GO" Content="GO" Margin="409.332,402.996,0,0" Height="50" VerticalAlignment="Top" HorizontalAlignment="Left" Width="50"/>
                </Grid>
            </TabItem>
            <TabItem x:Name="结果" Header="结果" Margin="130,-2,-132,0" Width="166" Height="60" HorizontalAlignment="Left" VerticalAlignment="Top" Style="{DynamicResource TabItemStyle1}" BorderBrush="{x:Null}" Foreground="#DD000000" Padding="90,2,6,2" FontSize="20" Template="{DynamicResource TabTemplate}" IsEnabled="{Binding 评测结束}">
                <TabItem.Resources>
                    <Style x:Key="FocusVisual">
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <ImageBrush x:Key="TabItem.Static.Background" ImageSource="UIElements/结果BG_normal.png" />
                    <SolidColorBrush x:Key="TabItem.Static.Border" Color="#00ACACAC"/>
                    <ImageBrush x:Key="TabItem.MouseOver.Background" ImageSource="UIElements/结果BG_hover.png" />
                    <SolidColorBrush x:Key="TabItem.MouseOver.Border" Color="#007EB4EA"/>
                    <SolidColorBrush x:Key="TabItem.Disabled.Background" Color="#F0F0F0"/>
                    <SolidColorBrush x:Key="TabItem.Disabled.Border" Color="#D9D9D9"/>
                    <SolidColorBrush x:Key="TabItem.Selected.Border" Color="#00ACACAC"/>
                    <ImageBrush x:Key="TabItem.Selected.Background" ImageSource="UIElements/结果BG_pressed.png" />
                    <Style x:Key="TabItemStyle1" TargetType="{x:Type TabItem}">
                        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                        <Setter Property="Foreground" Value="Black"/>
                        <Setter Property="Background" Value="{StaticResource TabItem.Static.Background}"/>
                        <Setter Property="BorderBrush" Value="{StaticResource TabItem.Static.Border}"/>
                        <Setter Property="Margin" Value="0"/>
                        <Setter Property="Padding" Value="6,2,6,2"/>
                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type TabItem}">
                                    <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                                        <Border x:Name="mainBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,1,1,0" Background="{TemplateBinding Background}" Margin="0">
                                            <Border x:Name="innerBorder" BorderBrush="{StaticResource TabItem.Selected.Border}" BorderThickness="1,1,1,0" Background="{StaticResource TabItem.Selected.Background}" Margin="-1" Opacity="0"/>
                                        </Border>
                                        <ContentPresenter x:Name="contentPresenter" ContentSource="Header" Focusable="False" HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
                                            <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
                                            <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
                                            <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
                                            <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                            <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                                            <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                            <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                                            <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                            <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                                            <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                            <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                                            <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Panel.ZIndex" Value="1"/>
                                            <Setter Property="Margin" Value="-2,-2,0,-2"/>
                                            <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Panel.ZIndex" Value="1"/>
                                            <Setter Property="Margin" Value="-2,0,-2,-2"/>
                                            <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Panel.ZIndex" Value="1"/>
                                            <Setter Property="Margin" Value="0,-2,-2,-2"/>
                                            <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Panel.ZIndex" Value="1"/>
                                            <Setter Property="Margin" Value="-2,-2,-2,0"/>
                                            <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                            <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                                            <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                                        </MultiDataTrigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </TabItem.Resources>
                <TabItem.Background>
                    <ImageBrush ImageSource="UIElements/结果BG_normal.png"/>
                </TabItem.Background>
                <Grid>
                    <TextBlock x:Name="方案名" Height="20.333" Margin="387,27,0,0" TextWrapping="Wrap" Text="方案名" VerticalAlignment="Top" FontSize="16" Padding="0,0,0,0" HorizontalAlignment="Left" Width="50"/>
                    <TextBox x:Name="方案名内容" HorizontalAlignment="Left" Height="24" Margin="627,27,0,0" TextWrapping="Wrap" Text="{Binding 方案名称}" VerticalAlignment="Top" Width="212" FontSize="16" Background="{x:Null}" BorderBrush="#1E000000" Foreground="#89000000" Padding="-2,-2,0,0"/>
                    <TextBlock x:Name="方案指标及参数" Height="20.333" Margin="387,126.002,0,0" TextWrapping="Wrap" Text="方案指标及参数" VerticalAlignment="Top" FontSize="16" Padding="0,0,0,0" HorizontalAlignment="Left" Width="116.667"/>
                    <Label x:Name="label" Content="{Binding 已配置的指标}" HorizontalAlignment="Left" Height="25" Margin="627,126,0,0" VerticalAlignment="Top" Width="212" FontSize="16" Padding="0,0,5,5" BorderThickness="0,0,0,1" Foreground="#DD000000" BorderBrush="#1E000000"/>
                    <Label x:Name="label_Copy" Content="{Binding 已配置的指标}" HorizontalAlignment="Left" Margin="627,206,0,0" Width="212" FontSize="16" Padding="0,0,5,5" BorderThickness="0,0,0,1" Foreground="#DD000000" BorderBrush="#1E000000" Height="25" VerticalAlignment="Top"/>
                    <Label x:Name="label_Copy1" Content="{Binding 已配置的指标}" HorizontalAlignment="Left" Margin="627,0,0,173" Width="212" FontSize="16" Padding="0,0,5,5" BorderThickness="0,0,0,1" Foreground="#DD000000" BorderBrush="#1E000000" Height="25" VerticalAlignment="Bottom"/>
                    <Label x:Name="label_Copy2" Content="{Binding 已配置的指标}" HorizontalAlignment="Left" Margin="627,0,0,93" Width="212" FontSize="16" Padding="0,0,5,5" BorderThickness="0,0,0,1" Foreground="#DD000000" BorderBrush="#1E000000" Height="25" VerticalAlignment="Bottom"/>
                    <Button x:Name="查看交易详情" Content="查看交易详情" Height="40.5" Margin="430.5,0,0,29.5" VerticalAlignment="Bottom" HorizontalAlignment="Left" Width="169.5" Command="{Binding 查看交易详情, Mode=OneWay}" Background="#FF878787"/>
                    <Button x:Name="学习此方案" Content="学习此方案" HorizontalAlignment="Left" Height="40.5" Margin="669,0,0,29.5" VerticalAlignment="Bottom" Width="142.5" Command="{Binding 学习此方案, Mode=OneWay}"/>
                    <Viewbox x:Name="胜率可视化" HorizontalAlignment="Left" Margin="134.5,51,0,0" Width="153" Height="153" VerticalAlignment="Top"/>
                    <TextBlock x:Name="胜率" HorizontalAlignment="Left" Margin="195.334,229.75,0,0" TextWrapping="Wrap" Text="胜率" Width="32.333" RenderTransformOrigin="1.025,0.478" FontSize="16" Foreground="#89000000" Height="19" VerticalAlignment="Top"/>
                    <Viewbox x:Name="年化收益率可视化" HorizontalAlignment="Left" Margin="134.5,319,0,0" Width="153" Height="50" VerticalAlignment="Top" OpacityMask="Black"/>
                    <TextBlock x:Name="年化收益率" HorizontalAlignment="Left" Margin="170,391,0,0" TextWrapping="Wrap" Text="年化收益率" Width="81.667" RenderTransformOrigin="1.025,0.478" FontSize="16" Height="19" VerticalAlignment="Top" Foreground="#89000000"/>
                </Grid>
            </TabItem>
        </TabControl>
        <Button x:Name="button" Content="{Binding NextTab, ElementName=userControl, Mode=OneWay}" HorizontalAlignment="Left" Margin="708,600,0,0" VerticalAlignment="Top" Width="164" Height="40.24" Command="{Binding 下一步, ElementName=userControl, Mode=OneWay}"/>
        <Button x:Name="button_Copy" HorizontalAlignment="Left" Margin="0,600,0,0" VerticalAlignment="Top" Width="164" Height="40.24" d:LayoutOverrides="HorizontalAlignment" Command="{Binding 上一步, ElementName=userControl, Mode=OneWay}" Content="{Binding PrevTab, ElementName=userControl, Mode=OneWay}" ContentStringFormat=""/>

    </Grid>
</UserControl>
